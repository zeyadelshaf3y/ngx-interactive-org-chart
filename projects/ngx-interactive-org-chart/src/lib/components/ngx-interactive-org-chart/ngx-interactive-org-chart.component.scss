:host {
  --collapse-duration: 0.3s;
  --base-delay: 100ms;
  --animation-duration: 0.5s;

  cursor: grab;

  &:active {
    cursor: grabbing;
  }
}

:host[data-layout="horizontal"] {
  .org-chart {
    min-width: 100%;

    &:first-child {
      display: flex;

      .node-content {
        align-self: center;
      }

      .org-node {
        display: flex;
        justify-content: flex-start;
      }
    }

    .node-container {
      padding-inline-start: calc(
        var(--node-container-spacing) + (var(--collapse-button-size) / 2)
      );
      padding-block-start: 0;

      min-width: auto;
      margin: 0;

      display: flex;
      flex-direction: column;

      .node-container {
        overflow: hidden;
        display: flex;
        flex-direction: column;
        margin: 0;
        min-width: auto;

        &::before {
          inset-inline-start: 0;
          inset-block-start: 50%;
          border-block-start: var(--connector-width) solid
            var(--connector-color);
          height: 0;
          width: calc(
            var(--node-container-spacing) + (var(--collapse-button-size) / 2)
          );

          animation: lineAppearX var(--animation-duration) ease-out forwards;
        }
      }
    }

    .org-node {
      justify-content: flex-start;
      overflow: visible;

      &::before,
      &::after {
        inset-inline-start: 0;
        inset-block-end: 50%;
        border-inline-start: var(--connector-width) solid var(--connector-color);
        border-inline-end: 0;
        height: 50%;
        width: var(--node-container-spacing);
        animation: lineAppearY var(--animation-duration) ease-out forwards;
      }

      &::after {
        inset-block-end: auto;
        inset-block-start: 50%;
        border-block-start: var(--connector-width) solid var(--connector-color);
      }

      &::before {
        border-block-start: none;
      }

      &:only-child {
        padding-inline-start: 0.125rem;
        padding-block-start: var(--node-container-spacing);

        &::before,
        &::after {
          display: none;
        }
      }

      &:first-child {
        &::before {
          border: 0 none;
        }

        &::after {
          border-end-start-radius: 0;
          border-start-start-radius: var(--connector-border-radius);
          border-block-start: var(--connector-width) solid
            var(--connector-color);
        }
      }

      &:last-child {
        &::after {
          border: 0 none;
        }

        &::before {
          border-block-end: var(--connector-width) solid var(--connector-color);
          border-block-start: none;
          border-end-start-radius: var(--connector-border-radius);
          border-start-end-radius: 0;
        }
      }
    }

    .node-content {
      white-space: nowrap;
    }

    .collapse-btn {
      inset-inline-end: calc(-1 * var(--collapse-button-size) / 2);
      inset-block-end: unset;
      inset-block-start: 50%;
      inset-inline-start: unset;
      transform: translateY(-50%);
      flex-direction: column-reverse;
      justify-content: center;

      svg {
        transition: transform var(--collapse-duration) ease;
        transform: rotate(-90deg);
      }

      &.collapsed {
        svg {
          transform: rotate(90deg);
        }
      }

      .children-count {
        padding-inline-start: 0;
      }
    }
  }

  .rtl {
    .org-chart {
      .collapse-btn {
        inset-inline-start: calc(-1 * var(--collapse-button-size) / 2);
        inset-inline-end: unset;
      }
    }
  }
}

.org-chart {
  text-align: center;
  min-width: 100%;
  width: max-content;
  scroll-behavior: smooth;
  border: var(--container-border);
  background: var(--container-background);

  cursor: grab;

  &:active {
    cursor: grabbing;
  }

  &-container {
    display: flex;
    min-height: 100%;
    max-height: 100%;
    width: 100%;
    overflow: hidden;
  }

  .node-container {
    display: flex;
    flex-wrap: nowrap;
    justify-content: center;

    padding-block-start: calc(
      var(--node-container-spacing) + (var(--collapse-button-size) / 2)
    );
    padding-inline-start: 0;
    position: relative;
    opacity: 1;
    transition:
      max-height var(--collapse-duration) ease,
      opacity var(--collapse-duration) ease,
      padding var(--collapse-duration) ease,
      width var(--collapse-duration) ease;

    box-sizing: border-box;
    margin: 0 auto;
    min-width: 0;

    &.collapsed {
      max-height: 0;
      opacity: 0;
      padding-block-start: 0;
    }

    &:first-child {
      padding-block-start: 0.5rem;
      margin-block: 0;
    }

    .node-container {
      &::before {
        content: "";
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 50%;
        border-inline-start: var(--connector-width) solid var(--connector-color);
        width: 0;
        height: calc(
          var(--node-container-spacing) +
            (var(--collapse-button-size) / 2 + var(--connector-width))
        );
        opacity: 0;
        animation: lineAppearY var(--animation-duration) ease-out forwards;
        animation-delay: calc(var(--base-delay) + 300ms);
        transition: border-color 0.5s;
      }
    }
  }

  .org-node {
    display: inline-table;
    text-align: center;
    list-style-type: none;
    position: relative;
    padding: var(--node-container-spacing);
    transition: 0.5s;
    flex-shrink: 0;
    overflow: hidden;

    &.removing {
      opacity: 0;
      transform: translateY(1.25rem) scale(0.95);
      transition: 0.5s;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      inset-block-start: 0;
      inset-inline-end: 50%;
      border-block-start: var(--connector-width) solid var(--connector-color);
      width: 51%;
      height: var(--node-container-spacing);
      opacity: 0;
      animation: lineAppearX var(--animation-duration) ease-out forwards;
      animation-delay: calc(var(--base-delay) + 200ms);
      transition: border-color 0.5s;
    }

    &::after {
      inset-inline-end: auto;
      inset-inline-start: 50%;
      border-inline-start: var(--connector-width) solid var(--connector-color);
    }

    &:only-child {
      padding-block-start: 0.125rem;

      &::before,
      &::after {
        display: none;
      }
    }

    &:first-child {
      &::before {
        border: 0 none;
      }

      &::after {
        border-start-start-radius: var(--connector-border-radius);
        border-inline-start: var(--connector-width) solid var(--connector-color);
      }
    }

    &:last-child {
      &::after {
        border: 0 none;
      }

      &::before {
        border-inline-end: var(--connector-width) solid var(--connector-color);
        border-start-end-radius: var(--connector-border-radius);
      }
    }

    .node-content {
      max-width: var(--node-max-width);
      max-height: var(--node-max-height);
      min-width: var(--node-min-width);
      min-height: var(--node-min-height);
      background: var(--node-background);
      color: var(--node-color);
      box-shadow: var(--node-shadow);
      padding: var(--node-padding);
      position: relative;
      display: inline-grid;
      border-radius: var(--node-border-radius);
      text-decoration: none;
      transition: 0.5s;
      outline: var(--node-outline-width) solid var(--node-outline-color);
      z-index: 1;
      box-sizing: content-box;

      &.highlighted {
        animation: pulse 1.5s infinite;
      }

      &:hover {
        outline: var(--node-outline-width) solid
          var(--node-active-outline-color);

        + .node-container {
          .node-content {
            outline: var(--node-outline-width) solid
              var(--node-active-outline-color);
          }

          &::before {
            border-color: var(--connector-active-color);
          }

          .org-node {
            &::before,
            &::after {
              border-color: var(--connector-active-color);
            }
          }

          .node-container {
            &::before {
              border-color: var(--connector-active-color);
            }
          }
        }
      }
    }
  }

  .collapse-btn {
    all: unset;
    direction: ltr;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--collapse-button-color);
    background: var(--collapse-button-background);
    border: 0.0625rem solid var(--collapse-button-border-color);
    border-radius: var(--collapse-button-border-radius);
    position: absolute;
    inset-block-end: calc(-1 * var(--collapse-button-size) / 2);
    inset-inline-start: 50%;
    transform: translateX(-50%);
    z-index: 2;
    cursor: pointer;
    transition:
      transform var(--collapse-duration) ease,
      box-shadow var(--collapse-duration) ease;

    svg {
      transition: transform var(--collapse-duration) ease;
      width: var(--collapse-button-size);
      height: var(--collapse-button-size);
    }

    &.collapsed {
      svg {
        transform: rotate(180deg);
      }
    }

    .children-count {
      padding-inline-start: 0.25rem;
      font-size: var(--collapse-button-count-font-size);
    }

    &:hover {
      transform: translateX(-50%)
        scale(var(--collapse-button-hover-transform-scale));
      box-shadow: var(--collapse-button-hover-shadow);
      color: var(--collapse-button-hover-color);
      background: var(--collapse-button-hover-background);
    }

    &:focus-visible {
      outline: var(--collapse-button-focus-outline);
      outline-offset: 0.0625rem;
    }
  }
}

@keyframes lineAppearX {
  from {
    opacity: 0;
    transform: scaleX(0);
  }

  to {
    opacity: 1;
    transform: scaleX(1);
  }
}

@keyframes lineAppearY {
  from {
    opacity: 0;
    transform: scaleY(0);
  }

  to {
    opacity: 1;
    transform: scaleY(1);
  }
}

@media (prefers-reduced-motion: reduce) {
  .org-chart {
    --base-delay: 0ms;
    --animation-duration: 0ms;
    --collapse-duration: 0ms;

    .node-container {
      transition: none;

      .node-container {
        &::before {
          opacity: 1;
          animation: none;
        }
      }
    }

    .collapse-btn {
      exc-icon {
        transition: none;
      }
    }

    .org-node {
      opacity: 1;
      transform: none;
      animation: none;

      &::before,
      &::after {
        opacity: 1;
        animation: none;
      }
    }
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0;
  }
  70% {
    box-shadow: 0 0 0 10px var(--node-highlight-shadow-color);
  }
  100% {
    box-shadow: 0 0 0 0 var(--node-highlight-shadow-color);
  }
}
